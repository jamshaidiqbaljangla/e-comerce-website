window.AccountManager={USERS_KEY:'bingoUsers',SESSION_KEY:'bingoLoggedInUser',init:function(){console.log('[DEBUG]account-manager.js:Account Manager initializing...');if(window.location.pathname.includes('account.html')){if(!this.isAuthenticated()){console.log('[DEBUG]account-manager.js:User not authenticated,redirecting to login');window.location.href='login.html';return;}const userData=this.loadUserData();if(!userData){console.error('[ERROR]account-manager.js:User data not found');window.location.href='login.html';return;}this.setupAccountPage(userData);this.setupTabNavigation();this.setupLogout();}console.log('[DEBUG]account-manager.js:Account Manager initialized');},isAuthenticated:function(){try{const userData=localStorage.getItem(this.SESSION_KEY);if(!userData)return false;const user=JSON.parse(userData);if(user.expiresAt&&user.expiresAt<new Date().getTime()){localStorage.removeItem(this.SESSION_KEY);return false;}return true;}catch(error){console.error('[ERROR]account-manager.js:Authentication check error:',error);return false;}},loadUserData:function(){try{const currentUser=JSON.parse(localStorage.getItem(this.SESSION_KEY));if(!currentUser)return null;const users=JSON.parse(localStorage.getItem(this.USERS_KEY))||[];return users.find(user=>user.id===currentUser.id);}catch(error){console.error('[ERROR]account-manager.js:Error loading user data:',error);return null;}},setupAccountPage:function(userData){const welcomeName=document.getElementById('welcome-name');if(welcomeName){welcomeName.textContent=`Hello,${userData.name}`;}this.loadDashboardStats(userData);this.loadRecentOrders(userData);this.loadAllOrders(userData);this.loadAddresses(userData);this.loadPaymentMethods(userData);this.loadWishlist(userData);this.loadAccountSettings(userData);this.setupAddressModal();this.setupPaymentModal();this.setupAccountForm(userData);},setupTabNavigation:function(){const tabs=document.querySelectorAll('.account-tab');const tabContents=document.querySelectorAll('.tab-content');tabs.forEach(tab=>{tab.addEventListener('click',function(){tabs.forEach(t=>t.classList.remove('active'));tabContents.forEach(content=>content.classList.remove('active'));this.classList.add('active');const tabId=this.getAttribute('data-tab');document.getElementById(tabId).classList.add('active');window.location.hash=tabId;});});if(window.location.hash){const hash=window.location.hash.substring(1);const tabToActivate=document.querySelector(`.account-tab[data-tab="${hash}"]`);if(tabToActivate){tabToActivate.click();}}const viewAllOrdersBtn=document.querySelector('.btn[data-tab="orders"]');if(viewAllOrdersBtn){viewAllOrdersBtn.addEventListener('click',function(e){e.preventDefault();document.querySelector('.account-tab[data-tab="orders"]').click();});}},setupLogout:function(){const logoutBtn=document.getElementById('logout-btn');if(logoutBtn){logoutBtn.addEventListener('click',function(){localStorage.removeItem('bingoLoggedInUser');window.location.href='login.html';});}},loadDashboardStats:function(userData){const orderCount=document.getElementById('order-count');if(orderCount){orderCount.textContent=userData.orders?userData.orders.length:'0';}const pendingCount=document.getElementById('pending-count');if(pendingCount){const pendingOrders=userData.orders?userData.orders.filter(order=>order.status==='processing'):[];pendingCount.textContent=pendingOrders.length;}const wishlistCount=document.getElementById('wishlist-count');if(wishlistCount){wishlistCount.textContent=userData.wishlist?userData.wishlist.length:'0';}},loadRecentOrders:function(userData){const recentOrdersContainer=document.getElementById('recent-orders-container');const recentOrdersTable=document.getElementById('recent-orders');const noOrdersMessage=document.getElementById('no-orders-message');if(!recentOrdersContainer||!recentOrdersTable||!noOrdersMessage)return;if(!userData.orders||userData.orders.length===0){recentOrdersContainer.querySelector('table').style.display='none';noOrdersMessage.style.display='block';return;}const recentOrders=userData.orders.slice(0,3);let ordersHtml='';recentOrders.forEach(order=>{const statusClass=this.getStatusClass(order.status);ordersHtml+=`<tr><td>${order.orderId}</td><td>${this.formatDate(order.date)}</td><td><span class="order-status ${statusClass}">${this.capitalizeFirst(order.status)}</span></td><td>${this.formatPrice(order.total)}</td><td><a href="#orders" class="btn btn-sm btn-outline" data-order-id="${order.orderId}">View Order</a></td></tr>`;});recentOrdersTable.innerHTML=ordersHtml;recentOrdersContainer.querySelector('table').style.display='table';noOrdersMessage.style.display='none';},loadAllOrders:function(userData){const allOrdersContainer=document.getElementById('all-orders-container');const allOrdersTable=document.getElementById('all-orders');const noAllOrdersMessage=document.getElementById('no-all-orders-message');if(!allOrdersContainer||!allOrdersTable||!noAllOrdersMessage)return;if(!userData.orders||userData.orders.length===0){allOrdersContainer.querySelector('table').style.display='none';noAllOrdersMessage.style.display='block';return;}let ordersHtml='';userData.orders.forEach(order=>{const statusClass=this.getStatusClass(order.status);ordersHtml+=`<tr><td>${order.orderId}</td><td>${this.formatDate(order.date)}</td><td><span class="order-status ${statusClass}">${this.capitalizeFirst(order.status)}</span></td><td>${order.items.length}item${order.items.length!==1?'s':''}</td><td>${this.formatPrice(order.total)}</td><td><a href="#" class="btn btn-sm btn-outline" data-order-id="${order.orderId}">View</a></td></tr>`;});allOrdersTable.innerHTML=ordersHtml;allOrdersContainer.querySelector('table').style.display='table';noAllOrdersMessage.style.display='none';},loadAddresses:function(userData){const addressesContainer=document.getElementById('addresses-container');const addressList=document.getElementById('address-list');const noAddressesMessage=document.getElementById('no-addresses-message');if(!addressesContainer||!addressList||!noAddressesMessage)return;if(!userData.addresses||userData.addresses.length===0){addressList.style.display='none';noAddressesMessage.style.display='block';return;}let addressesHtml='';userData.addresses.forEach(address=>{addressesHtml+=`<div class="address-card" data-address-id="${address.id}"><span class="address-type ${address.isDefault?'address-default':''}">${address.isDefault?'Default':address.type}</span><div class="address-actions"><button class="address-action-btn edit-address" title="Edit"><i class="fas fa-pencil-alt"></i></button><button class="address-action-btn delete-address" title="Delete"><i class="fas fa-trash-alt"></i></button></div><div class="address-content"><div class="address-name">${address.name}</div><div class="address-details">${address.line1}<br>${address.line2?address.line2+'<br>':''}${address.city},${address.state}${address.zip}<br>${address.country}</div><div class="address-contact">${address.phone}</div></div></div>`;});addressList.innerHTML=addressesHtml;addressList.style.display='grid';noAddressesMessage.style.display='none';this.setupAddressActions();},loadPaymentMethods:function(userData){const paymentMethodsContainer=document.getElementById('payment-methods-container');const paymentList=document.getElementById('payment-list');const noPaymentsMessage=document.getElementById('no-payments-message');if(!paymentMethodsContainer||!paymentList||!noPaymentsMessage)return;if(!userData.paymentMethods||userData.paymentMethods.length===0){paymentList.style.display='none';noPaymentsMessage.style.display='block';return;}let paymentsHtml='';userData.paymentMethods.forEach(payment=>{const cardType=this.getCardType(payment.cardNumber);const cardIcon=this.getCardIcon(cardType);paymentsHtml+=`<div class="payment-card" data-payment-id="${payment.id}"><div class="payment-card-header"><div class="payment-card-logo"><i class="${cardIcon}"></i></div><div class="payment-card-type">${cardType}</div></div><div class="payment-card-number">${this.formatCardNumber(payment.cardNumber)}</div><div class="payment-card-name">${payment.cardholderName}</div><div class="payment-card-expiry">Expires:${payment.expiryDate}</div><div class="payment-card-actions"><button class="address-action-btn edit-payment" title="Edit"><i class="fas fa-pencil-alt"></i></button><button class="address-action-btn delete-payment" title="Delete"><i class="fas fa-trash-alt"></i></button></div></div>`;});paymentList.innerHTML=paymentsHtml;paymentList.style.display='grid';noPaymentsMessage.style.display='none';this.setupPaymentActions();},loadWishlist:function(userData){const wishlistContainer=document.getElementById('wishlist-container');const wishlistList=document.getElementById('wishlist-list');const noWishlistMessage=document.getElementById('no-wishlist-message');if(!wishlistContainer||!wishlistList||!noWishlistMessage)return;if(!userData.wishlist||userData.wishlist.length===0){wishlistList.style.display='none';noWishlistMessage.style.display='block';return;}let wishlistHtml='';userData.wishlist.forEach(item=>{wishlistHtml+=`<div class="wishlist-item" data-product-id="${item.productId}"><div class="wishlist-image"><img src="images/product-${Math.floor(Math.random()*8)+1}.jpg" alt="Product"><button class="wishlist-remove" title="Remove from wishlist"><i class="fas fa-times"></i></button></div><div class="wishlist-content"><h4 class="wishlist-title">${item.productName||'Product Name'}</h4><div class="wishlist-price">${this.formatPrice(item.price||199)}</div><div class="wishlist-actions"><button class="btn btn-dark btn-sm wishlist-btn">Add to Cart</button></div></div></div>`;});wishlistList.innerHTML=wishlistHtml;wishlistList.style.display='grid';noWishlistMessage.style.display='none';this.setupWishlistActions();},loadAccountSettings:function(userData){const accountForm=document.getElementById('account-form');if(!accountForm)return;document.getElementById('firstName').value=userData.firstName||'';document.getElementById('lastName').value=userData.lastName||'';document.getElementById('email').value=userData.email||'';document.getElementById('phone').value=userData.phone||'';document.getElementById('emailPromo').checked=userData.preferences?.emailPromo!==false;document.getElementById('emailOrder').checked=userData.preferences?.emailOrder!==false;},setupAddressModal:function(){const addAddressBtn=document.getElementById('add-address-btn');const emptyAddAddressBtn=document.getElementById('empty-add-address-btn');const addressModal=document.getElementById('address-modal');const addressForm=document.getElementById('address-form');const modalClose=addressModal?addressModal.querySelector('.modal-close'):null;if(addAddressBtn){addAddressBtn.addEventListener('click',()=>{this.showAddressModal();});}if(emptyAddAddressBtn){emptyAddAddressBtn.addEventListener('click',()=>{this.showAddressModal();});}if(modalClose){modalClose.addEventListener('click',()=>{addressModal.classList.remove('active');});}if(addressModal){addressModal.addEventListener('click',(e)=>{if(e.target===addressModal){addressModal.classList.remove('active');}});}if(addressForm){addressForm.addEventListener('submit',(e)=>{e.preventDefault();const addressId=document.getElementById('address-id').value;const isEdit=!!addressId;const addressData={id:isEdit?addressId:Date.now().toString(),name:document.getElementById('address-name').value,line1:document.getElementById('address-line1').value,line2:document.getElementById('address-line2').value,city:document.getElementById('address-city').value,state:document.getElementById('address-state').value,zip:document.getElementById('address-zip').value,country:document.getElementById('address-country').value,phone:document.getElementById('address-phone').value,isDefault:document.getElementById('address-default').checked,type:'Home'};if(isEdit){this.updateAddress(addressData);}else{this.addAddress(addressData);}addressModal.classList.remove('active');});}},showAddressModal:function(addressData=null){const addressModal=document.getElementById('address-modal');const modalTitle=document.getElementById('address-modal-title');const addressForm=document.getElementById('address-form');if(!addressModal||!modalTitle||!addressForm)return;addressForm.reset();if(addressData){modalTitle.textContent='Edit Address';document.getElementById('address-id').value=addressData.id;document.getElementById('address-name').value=addressData.name;document.getElementById('address-line1').value=addressData.line1;document.getElementById('address-line2').value=addressData.line2||'';document.getElementById('address-city').value=addressData.city;document.getElementById('address-state').value=addressData.state;document.getElementById('address-zip').value=addressData.zip;document.getElementById('address-country').value=addressData.country;document.getElementById('address-phone').value=addressData.phone;document.getElementById('address-default').checked=addressData.isDefault;}else{modalTitle.textContent='Add New Address';document.getElementById('address-id').value='';}addressModal.classList.add('active');},setupPaymentModal:function(){const addPaymentBtn=document.getElementById('add-payment-btn');const emptyAddPaymentBtn=document.getElementById('empty-add-payment-btn');const paymentModal=document.getElementById('payment-modal');const paymentForm=document.getElementById('payment-form');const modalClose=paymentModal?paymentModal.querySelector('.modal-close'):null;if(addPaymentBtn){addPaymentBtn.addEventListener('click',()=>{this.showPaymentModal();});}if(emptyAddPaymentBtn){emptyAddPaymentBtn.addEventListener('click',()=>{this.showPaymentModal();});}if(modalClose){modalClose.addEventListener('click',()=>{paymentModal.classList.remove('active');});}if(paymentModal){paymentModal.addEventListener('click',(e)=>{if(e.target===paymentModal){paymentModal.classList.remove('active');}});}if(paymentForm){paymentForm.addEventListener('submit',(e)=>{e.preventDefault();const paymentId=document.getElementById('payment-id').value;const isEdit=!!paymentId;const paymentData={id:isEdit?paymentId:Date.now().toString(),cardNumber:document.getElementById('card-number').value.replace(/\s/g,''),cardholderName:document.getElementById('card-name').value,expiryDate:document.getElementById('card-expiry').value,cvv:document.getElementById('card-cvv').value};if(isEdit){this.updatePaymentMethod(paymentData);}else{this.addPaymentMethod(paymentData);}paymentModal.classList.remove('active');});}},showPaymentModal:function(paymentData=null){const paymentModal=document.getElementById('payment-modal');const modalTitle=document.getElementById('payment-modal-title');const paymentForm=document.getElementById('payment-form');if(!paymentModal||!modalTitle||!paymentForm)return;paymentForm.reset();if(paymentData){modalTitle.textContent='Edit Payment Method';document.getElementById('payment-id').value=paymentData.id;document.getElementById('card-number').value=this.formatCardNumber(paymentData.cardNumber);document.getElementById('card-name').value=paymentData.cardholderName;document.getElementById('card-expiry').value=paymentData.expiryDate;document.getElementById('card-cvv').value=paymentData.cvv;}else{modalTitle.textContent='Add New Payment Method';document.getElementById('payment-id').value='';}paymentModal.classList.add('active');},setupAccountForm:function(userData){const accountForm=document.getElementById('account-form');if(!accountForm)return;accountForm.addEventListener('submit',(e)=>{e.preventDefault();const firstName=document.getElementById('firstName').value;const lastName=document.getElementById('lastName').value;const email=document.getElementById('email').value;const phone=document.getElementById('phone').value;const currentPassword=document.getElementById('currentPassword').value;const newPassword=document.getElementById('newPassword').value;const confirmPassword=document.getElementById('confirmPassword').value;const emailPromo=document.getElementById('emailPromo').checked;const emailOrder=document.getElementById('emailOrder').checked;if(newPassword&&newPassword!==confirmPassword){alert('New passwords do not match.');return;}if(newPassword&&userData.password!==currentPassword){alert('Current password is incorrect.');return;}const updatedUserData={firstName:firstName,lastName:lastName,name:`${firstName}${lastName}`,email:email,phone:phone,preferences:{emailPromo:emailPromo,emailOrder:emailOrder}};if(newPassword){updatedUserData.password=newPassword;}if(this.updateUser(updatedUserData)){alert('Account information updated successfully.');document.getElementById('currentPassword').value='';document.getElementById('newPassword').value='';document.getElementById('confirmPassword').value='';}else{alert('Error updating account information. Please try again.');}});},setupAddressActions:function(){const editButtons=document.querySelectorAll('.edit-address');editButtons.forEach(button=>{button.addEventListener('click',(e)=>{const addressCard=e.target.closest('.address-card');if(!addressCard)return;const addressId=addressCard.getAttribute('data-address-id');const addressData=this.getAddressById(addressId);if(addressData){this.showAddressModal(addressData);}});});const deleteButtons=document.querySelectorAll('.delete-address');deleteButtons.forEach(button=>{button.addEventListener('click',(e)=>{const addressCard=e.target.closest('.address-card');if(!addressCard)return;const addressId=addressCard.getAttribute('data-address-id');if(confirm('Are you sure you want to delete this address?')){this.deleteAddress(addressId);}});});},setupPaymentActions:function(){const editButtons=document.querySelectorAll('.edit-payment');editButtons.forEach(button=>{button.addEventListener('click',(e)=>{const paymentCard=e.target.closest('.payment-card');if(!paymentCard)return;const paymentId=paymentCard.getAttribute('data-payment-id');const paymentData=this.getPaymentMethodById(paymentId);if(paymentData){this.showPaymentModal(paymentData);}});});const deleteButtons=document.querySelectorAll('.delete-payment');deleteButtons.forEach(button=>{button.addEventListener('click',(e)=>{const paymentCard=e.target.closest('.payment-card');if(!paymentCard)return;const paymentId=paymentCard.getAttribute('data-payment-id');if(confirm('Are you sure you want to delete this payment method?')){this.deletePaymentMethod(paymentId);}});});},setupWishlistActions:function(){const removeButtons=document.querySelectorAll('.wishlist-remove');removeButtons.forEach(button=>{button.addEventListener('click',(e)=>{const wishlistItem=e.target.closest('.wishlist-item');if(!wishlistItem)return;const productId=wishlistItem.getAttribute('data-product-id');this.removeFromWishlist(productId);});});const addToCartButtons=document.querySelectorAll('.wishlist-btn');addToCartButtons.forEach(button=>{button.addEventListener('click',(e)=>{const wishlistItem=e.target.closest('.wishlist-item');if(!wishlistItem)return;const productId=wishlistItem.getAttribute('data-product-id');if(window.CartManager&&typeof window.CartManager.addToCart==='function'){window.CartManager.addToCart(productId,1);alert('Product added to cart!');}else{alert('Product added to cart!');}});});},addAddress:function(addressData){const userData=this.loadUserData();if(!userData)return false;if(!userData.addresses){userData.addresses=[];}if(addressData.isDefault||userData.addresses.length===0){userData.addresses.forEach(address=>{address.isDefault=false;});}userData.addresses.push(addressData);return this.updateUser(userData);},updateAddress:function(addressData){const userData=this.loadUserData();if(!userData)return false;const addressIndex=userData.addresses.findIndex(address=>address.id===addressData.id);if(addressIndex===-1)return false;if(addressData.isDefault){userData.addresses.forEach(address=>{address.isDefault=false;});}userData.addresses[addressIndex]=addressData;return this.updateUser(userData);},deleteAddress:function(addressId){const userData=this.loadUserData();if(!userData)return false;const address=userData.addresses.find(address=>address.id===addressId);if(!address)return false;if(address.isDefault){alert('Cannot delete default address. Please set another address as default first.');return false;}userData.addresses=userData.addresses.filter(address=>address.id!==addressId);if(this.updateUser(userData)){this.loadAddresses(userData);return true;}return false;},getAddressById:function(addressId){const userData=this.loadUserData();if(!userData||!userData.addresses)return null;return userData.addresses.find(address=>address.id===addressId);},addPaymentMethod:function(paymentData){const userData=this.loadUserData();if(!userData)return false;if(!userData.paymentMethods){userData.paymentMethods=[];}userData.paymentMethods.push(paymentData);return this.updateUser(userData);},updatePaymentMethod:function(paymentData){const userData=this.loadUserData();if(!userData)return false;const paymentIndex=userData.paymentMethods.findIndex(payment=>payment.id===paymentData.id);if(paymentIndex===-1)return false;userData.paymentMethods[paymentIndex]=paymentData;return this.updateUser(userData);},deletePaymentMethod:function(paymentId){const userData=this.loadUserData();if(!userData)return false;userData.paymentMethods=userData.paymentMethods.filter(payment=>payment.id!==paymentId);if(this.updateUser(userData)){this.loadPaymentMethods(userData);return true;}return false;},getPaymentMethodById:function(paymentId){const userData=this.loadUserData();if(!userData||!userData.paymentMethods)return null;return userData.paymentMethods.find(payment=>payment.id===paymentId);},removeFromWishlist:function(productId){const userData=this.loadUserData();if(!userData)return false;userData.wishlist=userData.wishlist.filter(item=>item.productId!==productId);if(this.updateUser(userData)){this.loadWishlist(userData);return true;}return false;},updateUser:function(updatedUserData){try{const currentUser=JSON.parse(localStorage.getItem(this.SESSION_KEY));if(!currentUser)return false;const users=JSON.parse(localStorage.getItem(this.USERS_KEY))||[];const userIndex=users.findIndex(user=>user.id===currentUser.id);if(userIndex===-1)return false;users[userIndex]={...users[userIndex],...updatedUserData};localStorage.setItem(this.USERS_KEY,JSON.stringify(users));if(updatedUserData.name||updatedUserData.email){const sessionUser={id:currentUser.id,name:updatedUserData.name||currentUser.name,email:updatedUserData.email||currentUser.email,expiresAt:currentUser.expiresAt};localStorage.setItem(this.SESSION_KEY,JSON.stringify(sessionUser));}return true;}catch(error){console.error('[ERROR]account-manager.js:Error updating user:',error);return false;}},getCardType:function(cardNumber){const firstDigit=cardNumber.charAt(0);const firstTwoDigits=cardNumber.substring(0,2);const firstFourDigits=cardNumber.substring(0,4);if(firstDigit==='4'){return 'Visa';}else if(['51','52','53','54','55'].includes(firstTwoDigits)){return 'Mastercard';}else if(['34','37'].includes(firstTwoDigits)){return 'American Express';}else if(['6011','644','65'].includes(firstFourDigits)||(firstTwoDigits==='62')){return 'Discover';}else{return 'Credit Card';}},getCardIcon:function(cardType){switch(cardType){case 'Visa':return 'fab fa-cc-visa';case 'Mastercard':return 'fab fa-cc-mastercard';case 'American Express':return 'fab fa-cc-amex';case 'Discover':return 'fab fa-cc-discover';default:return 'far fa-credit-card';}},formatCardNumber:function(cardNumber){if(!cardNumber)return '';const lastFour=cardNumber.slice(-4);return `************${lastFour}`;},formatPrice:function(price){return `$${parseFloat(price).toFixed(2)}`;},formatDate:function(dateString){if(!dateString)return '';const date=new Date(dateString);return date.toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'});},getStatusClass:function(status){switch(status.toLowerCase()){case 'delivered':return 'status-delivered';case 'processing':return 'status-processing';case 'canceled':return 'status-canceled';default:return '';}},capitalizeFirst:function(str){if(!str)return '';return str.charAt(0).toUpperCase()+str.slice(1);}};if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',function(){if(window.AccountManager){window.AccountManager.init();}});}else{if(window.AccountManager){window.AccountManager.init();}}console.log('[DEBUG]account-manager.js:AccountManager object defined');