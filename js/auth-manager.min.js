window.AuthManager={SESSION_KEY:'bingoLoggedInUser',USERS_KEY:'bingoUsers',init:function(){console.log('[DEBUG]auth-manager.js:Auth Manager initializing...');this.injectAuthModal();this.setupAuthModal();if(window.location.pathname.includes('account.html')){this.checkProtectedPage();}if(window.location.pathname.includes('login.html')){this.setupLoginForm();}if(window.location.pathname.includes('register.html')){this.setupRegisterForm();}if(window.location.pathname.includes('forgot-password.html')){this.setupForgotPasswordForm();}if(!localStorage.getItem(this.USERS_KEY)){localStorage.setItem(this.USERS_KEY,JSON.stringify([]));}console.log('[DEBUG]auth-manager.js:Auth Manager initialized');},checkProtectedPage:function(){if(!this.isAuthenticated()){console.log('[DEBUG]auth-manager.js:User not authenticated,redirecting to login page.');window.location.href='login.html';}},injectAuthModal:function(){if(document.getElementById('auth-modal'))return;const modalHTML=`<div id="auth-modal" class="modal"><div class="modal-content"><button class="modal-close" aria-label="Close modal"><i class="fas fa-times"></i></button><div class="auth-modal-content"><!--Login Form--><div id="login-form-container" class="auth-form-container"><h2 class="auth-title">Sign In</h2><p class="auth-subtitle">Sign in to continue shopping</p><div id="login-error" class="auth-message error"><p id="login-error-message">Invalid email or password. Please try again.</p></div><form id="modal-login-form"><div class="form-group"><label for="login-email">Email</label><input type="email" id="login-email" class="form-control" required></div><div class="form-group"><label for="login-password">Password</label><input type="password" id="login-password" class="form-control" required></div><div class="auth-actions"><label class="checkbox-container remember-me"><input type="checkbox" id="login-remember"><span class="checkmark"></span><span>Remember me</span></label><a href="#" class="forgot-password" id="show-forgot-password">Forgot Password?</a></div><button type="submit" class="btn btn-dark btn-full">Sign In</button></form><div class="auth-footer"><p>Don't have an account?<a href="#" class="auth-link" id="show-register">Create Account</a></p></div></div><!--Register Form--><div id="register-form-container" class="auth-form-container" style="display:none;"><h2 class="auth-title">Create Account</h2><p class="auth-subtitle">Sign up to continue shopping</p><div id="register-error" class="auth-message error"><p id="register-error-message">Error message here.</p></div><div id="register-success" class="auth-message success"><p>Account created successfully!You can now sign in.</p></div><form id="modal-register-form"><div class="input-group"><div class="form-group"><label for="register-firstName">First Name</label><input type="text" id="register-firstName" class="form-control" required></div><div class="form-group"><label for="register-lastName">Last Name</label><input type="text" id="register-lastName" class="form-control" required></div></div><div class="form-group"><label for="register-email">Email</label><input type="email" id="register-email" class="form-control" required></div><div class="form-group"><label for="register-password">Password</label><input type="password" id="register-password" class="form-control" required></div><div class="form-group"><label for="register-confirmPassword">Confirm Password</label><input type="password" id="register-confirmPassword" class="form-control" required></div><button type="submit" class="btn btn-dark btn-full">Create Account</button></form><div class="auth-footer"><p>Already have an account?<a href="#" class="auth-link" id="show-login">Sign In</a></p></div></div><!--Forgot Password Form--><div id="forgot-password-container" class="auth-form-container" style="display:none;"><h2 class="auth-title">Forgot Password</h2><p class="auth-subtitle">Enter your email to reset your password</p><div id="reset-error" class="auth-message error"><p id="reset-error-message">Error message here.</p></div><div id="reset-success" class="auth-message success"><p>Password reset instructions sent to your email.</p></div><form id="modal-reset-form"><div class="form-group"><label for="reset-email">Email</label><input type="email" id="reset-email" class="form-control" required></div><button type="submit" class="btn btn-dark btn-full">Reset Password</button></form><div class="auth-footer"><p>Remember your password?<a href="#" class="auth-link" id="back-to-login">Back to Sign In</a></p></div></div></div></div></div>`;document.body.insertAdjacentHTML('beforeend',modalHTML);},setupLoginForm:function(){const loginForm=document.getElementById('login-form');if(!loginForm)return;const authManager=this;loginForm.addEventListener('submit',function(e){e.preventDefault();const email=document.getElementById('email').value;const password=document.getElementById('password').value;const remember=document.querySelector('input[name="remember"]').checked;const submitBtn=loginForm.querySelector('button[type="submit"]');if(submitBtn)submitBtn.classList.add('btn-loading');try{if(authManager.login(email,password,remember)){window.location.href='account.html';}else{const errorElement=document.getElementById('login-error');if(errorElement){errorElement.classList.add('show');setTimeout(function(){errorElement.classList.remove('show');},5000);}if(submitBtn)submitBtn.classList.remove('btn-loading');}}catch(error){console.error('[ERROR]auth-manager.js:Login error:',error);if(submitBtn)submitBtn.classList.remove('btn-loading');}});},setupRegisterForm:function(){const registerForm=document.getElementById('register-form');if(!registerForm)return;const authManager=this;registerForm.addEventListener('submit',function(e){e.preventDefault();const firstName=document.getElementById('firstName').value;const lastName=document.getElementById('lastName').value;const email=document.getElementById('email').value;const password=document.getElementById('password').value;const confirmPassword=document.getElementById('confirmPassword').value;const errorElement=document.getElementById('register-error');const errorMessage=document.getElementById('error-message');const successElement=document.getElementById('register-success');const submitBtn=registerForm.querySelector('button[type="submit"]');if(submitBtn)submitBtn.classList.add('btn-loading');if(password!==confirmPassword){errorMessage.textContent="Passwords do not match.";errorElement.classList.add('show');if(submitBtn)submitBtn.classList.remove('btn-loading');return;}const passwordValidation=authManager.validatePassword(password);if(!passwordValidation.valid){errorMessage.textContent=passwordValidation.message;errorElement.classList.add('show');if(submitBtn)submitBtn.classList.remove('btn-loading');return;}try{authManager.register(firstName,lastName,email,password);successElement.classList.add('show');registerForm.reset();setTimeout(function(){window.location.href='login.html';},2000);}catch(error){errorMessage.textContent=error.message;errorElement.classList.add('show');setTimeout(function(){errorElement.classList.remove('show');},5000);if(submitBtn)submitBtn.classList.remove('btn-loading');}});},setupForgotPasswordForm:function(){const resetForm=document.getElementById('reset-form');if(!resetForm)return;const authManager=this;resetForm.addEventListener('submit',function(e){e.preventDefault();const email=document.getElementById('email').value;const errorElement=document.getElementById('reset-error');const errorMessage=document.getElementById('error-message');const successElement=document.getElementById('reset-success');const submitBtn=resetForm.querySelector('button[type="submit"]');if(submitBtn)submitBtn.classList.add('btn-loading');const users=authManager.getUsers();const user=users.find(user=>user.email===email);if(!user){errorMessage.textContent="Email not found. Please check your email or create a new account.";errorElement.classList.add('show');if(submitBtn)submitBtn.classList.remove('btn-loading');return;}successElement.classList.add('show');resetForm.reset();setTimeout(function(){window.location.href='login.html';},3000);if(submitBtn)submitBtn.classList.remove('btn-loading');});},isAuthenticated:function(){try{const userData=localStorage.getItem(this.SESSION_KEY);if(!userData)return false;const user=JSON.parse(userData);if(user.expiresAt&&user.expiresAt<new Date().getTime()){localStorage.removeItem(this.SESSION_KEY);return false;}return true;}catch(error){console.error('[ERROR]auth-manager.js:Error checking authentication:',error);return false;}},getCurrentUser:function(){try{const userData=localStorage.getItem(this.SESSION_KEY);return userData?JSON.parse(userData):null;}catch(error){console.error('[ERROR]auth-manager.js:Error getting current user:',error);return null;}},getUsers:function(){try{const usersData=localStorage.getItem(this.USERS_KEY);return usersData?JSON.parse(usersData):[];}catch(error){console.error('[ERROR]auth-manager.js:Error getting users:',error);return[];}},saveUsers:function(users){localStorage.setItem(this.USERS_KEY,JSON.stringify(users));},validatePassword:function(password){const minLength=password.length>=8;const hasUppercase=/[A-Z]/.test(password);const hasLowercase=/[a-z]/.test(password);const hasNumber=/[0-9]/.test(password);if(!minLength){return{valid:false,message:'Password must be at least 8 characters long.'};}if(!hasUppercase||!hasLowercase||!hasNumber){return{valid:false,message:'Password must include at least one uppercase letter,one lowercase letter,and one number.'};}return{valid:true};},hashPassword:function(password){return btoa(password+"BINGO_SALT_"+password.length);},login:function(email,password,remember=false){console.log('[DEBUG]auth-manager.js:Attempting login for:',email);try{const usersRaw=localStorage.getItem(this.USERS_KEY);console.log('[DEBUG]Raw users data from localStorage:',usersRaw);const users=this.getUsers();console.log('[DEBUG]Users found:',users.length);users.forEach((user,index)=>{console.log(`[DEBUG]User ${index}:${user.email}`);});const hashedPassword=this.hashPassword(password);console.log('[DEBUG]Hashed password for comparison:',hashedPassword);const user=users.find(user=>user.email===email&&user.password===hashedPassword);if(user){console.log('[DEBUG]Login successful for user:',user.email);const sessionUser={id:user.id,name:user.name,email:user.email,expiresAt:new Date().getTime()+(remember?30:1)*24*60*60*1000};localStorage.setItem(this.SESSION_KEY,JSON.stringify(sessionUser));return true;}const fallbackUsers=JSON.parse(sessionStorage.getItem('FALLBACK_'+this.USERS_KEY)||'[]');const fallbackUser=fallbackUsers.find(u=>u.email===email&&u.password===hashedPassword);if(fallbackUser){console.log('[DEBUG]Login successful using fallback storage');localStorage.setItem(this.SESSION_KEY,JSON.stringify({id:fallbackUser.id,name:fallbackUser.name,email:fallbackUser.email,expiresAt:new Date().getTime()+(remember?30:1)*24*60*60*1000}));return true;}console.log('[DEBUG]Login failed-invalid credentials');return false;}catch(error){console.error('[ERROR]Login error:',error);return false;}},register:function(firstName,lastName,email,password){console.log('[DEBUG]auth-manager.js:Attempting to register:',email);try{const testKey='register_test_'+Date.now();localStorage.setItem(testKey,'test');localStorage.removeItem(testKey);const users=this.getUsers();console.log('[DEBUG]Current users before registration:',users.length);if(users.some(user=>user.email===email)){throw new Error('Email is already registered. Please use a different email or sign in.');}const newUser={id:Date.now().toString(),name:`${firstName}${lastName}`,firstName:firstName,lastName:lastName,email:email,password:this.hashPassword(password),createdAt:new Date().toISOString(),orders:[],wishlist:[],addresses:[],paymentMethods:[]};users.push(newUser);const usersJSON=JSON.stringify(users);localStorage.setItem(this.USERS_KEY,usersJSON);const savedUsers=JSON.parse(localStorage.getItem('bingoUsers')||'[]');console.log('[DEBUG]Users after registration:',savedUsers.length);console.log('[DEBUG]Registration successful');return newUser;}catch(error){console.error('[ERROR]Registration error:',error);if(error.name==='QuotaExceededError'||error.name==='NS_ERROR_DOM_QUOTA_REACHED'){console.log('[DEBUG]localStorage quota exceeded,trying session storage');sessionStorage.setItem('FALLBACK_'+this.USERS_KEY,JSON.stringify([{id:Date.now().toString(),email:email,password:this.hashPassword(password),name:`${firstName}${lastName}`}]));}throw error;}},logout:function(){localStorage.removeItem(this.SESSION_KEY);window.location.href='login.html';},updateUser:function(userData){const currentUser=this.getCurrentUser();if(!currentUser)return false;const users=this.getUsers();const userIndex=users.findIndex(user=>user.id===currentUser.id);if(userIndex===-1)return false;users[userIndex]={...users[userIndex],...userData,password:userData.password?this.hashPassword(userData.password):users[userIndex].password};this.saveUsers(users);const sessionUser={id:users[userIndex].id,name:users[userIndex].name,email:users[userIndex].email,expiresAt:currentUser.expiresAt};localStorage.setItem(this.SESSION_KEY,JSON.stringify(sessionUser));return true;},setupAuthModal:function(){console.log('[DEBUG]auth-manager.js:Setting up auth modal...');const authModal=document.getElementById('auth-modal');if(!authModal)return;const loginContainer=document.getElementById('login-form-container');const registerContainer=document.getElementById('register-form-container');const forgotContainer=document.getElementById('forgot-password-container');const showRegisterLink=document.getElementById('show-register');const showLoginLink=document.getElementById('show-login');const showForgotLink=document.getElementById('show-forgot-password');const backToLoginLink=document.getElementById('back-to-login');const closeModalBtn=authModal.querySelector('.modal-close');const switchForm=(showForm,hideForm1,hideForm2)=>{hideForm1.style.display='none';hideForm2.style.display='none';showForm.style.display='block';showForm.classList.add('form-fade-in');};if(showRegisterLink){showRegisterLink.addEventListener('click',(e)=>{e.preventDefault();switchForm(registerContainer,loginContainer,forgotContainer);});}if(showLoginLink){showLoginLink.addEventListener('click',(e)=>{e.preventDefault();switchForm(loginContainer,registerContainer,forgotContainer);});}if(showForgotLink){showForgotLink.addEventListener('click',(e)=>{e.preventDefault();switchForm(forgotContainer,loginContainer,registerContainer);});}if(backToLoginLink){backToLoginLink.addEventListener('click',(e)=>{e.preventDefault();switchForm(loginContainer,registerContainer,forgotContainer);});}if(closeModalBtn){closeModalBtn.addEventListener('click',()=>{authModal.classList.remove('active');document.body.style.overflow='';authModal.style.display='';authModal.style.opacity='';authModal.style.visibility='';authModal.style.zIndex='';authModal.style.position='';authModal.style.alignItems='';authModal.style.justifyContent='';authModal.style.width='';authModal.style.height='';authModal.style.backgroundColor='';authModal.style.top='';authModal.style.left='';});}authModal.addEventListener('click',(e)=>{if(e.target===authModal){authModal.classList.remove('active');document.body.style.overflow='';authModal.style.display='';authModal.style.opacity='';authModal.style.visibility='';authModal.style.zIndex='';authModal.style.position='';authModal.style.alignItems='';authModal.style.justifyContent='';authModal.style.width='';authModal.style.height='';authModal.style.backgroundColor='';authModal.style.top='';authModal.style.left='';}});document.addEventListener('keydown',(e)=>{if(e.key==='Escape'&&authModal.classList.contains('active')){authModal.classList.remove('active');document.body.style.overflow='';authModal.style.display='';authModal.style.opacity='';authModal.style.visibility='';authModal.style.zIndex='';authModal.style.position='';authModal.style.alignItems='';authModal.style.justifyContent='';authModal.style.width='';authModal.style.height='';authModal.style.backgroundColor='';authModal.style.top='';authModal.style.left='';}});const self=this;const modalLoginForm=document.getElementById('modal-login-form');if(modalLoginForm){modalLoginForm.addEventListener('submit',function(e){e.preventDefault();const email=document.getElementById('login-email').value;const password=document.getElementById('login-password').value;const remember=document.getElementById('login-remember').checked;const submitBtn=modalLoginForm.querySelector('button[type="submit"]');submitBtn.classList.add('btn-loading');console.log('[DEBUG]auth-manager.js:Processing modal login for:',email);setTimeout(function(){try{if(window.AuthManager.login(email,password,remember)){console.log('[DEBUG]auth-manager.js:Modal login successful');authModal.classList.remove('active');document.body.style.overflow='';authModal.style.display='';authModal.style.opacity='';authModal.style.visibility='';authModal.style.zIndex='';authModal.style.position='';authModal.style.alignItems='';authModal.style.justifyContent='';authModal.style.width='';authModal.style.height='';authModal.style.backgroundColor='';authModal.style.top='';authModal.style.left='';const event=new CustomEvent('userAuthenticated');document.dispatchEvent(event);if(window.CartManager&&typeof window.CartManager.loadCart==='function'){window.CartManager.loadCart();}if(window.WishlistManager&&typeof window.WishlistManager.loadWishlist==='function'){window.WishlistManager.loadWishlist();}if(window.CartManager&&typeof window.CartManager.showNotification==='function'){window.CartManager.showNotification("Signed in successfully!","success");}}else{console.log('[DEBUG]auth-manager.js:Modal login failed-invalid credentials');const errorElement=document.getElementById('login-error');if(errorElement){errorElement.classList.add('show');setTimeout(function(){errorElement.classList.remove('show');},5000);}}}catch(error){console.error('[ERROR]auth-manager.js:Modal login error:',error);if(window.CartManager&&typeof window.CartManager.showNotification==='function'){window.CartManager.showNotification("Login failed:"+error.message,"error");}}submitBtn.classList.remove('btn-loading');},500);});}const modalRegisterForm=document.getElementById('modal-register-form');if(modalRegisterForm){modalRegisterForm.addEventListener('submit',function(e){e.preventDefault();const firstName=document.getElementById('register-firstName').value;const lastName=document.getElementById('register-lastName').value;const email=document.getElementById('register-email').value;const password=document.getElementById('register-password').value;const confirmPassword=document.getElementById('register-confirmPassword').value;const errorElement=document.getElementById('register-error');const errorMessage=document.getElementById('register-error-message');const successElement=document.getElementById('register-success');const submitBtn=modalRegisterForm.querySelector('button[type="submit"]');submitBtn.classList.add('btn-loading');console.log('[DEBUG]auth-manager.js:Processing modal registration for:',email);if(password!==confirmPassword){errorMessage.textContent="Passwords do not match.";errorElement.classList.add('show');submitBtn.classList.remove('btn-loading');return;}const passwordValidation=window.AuthManager.validatePassword(password);if(!passwordValidation.valid){errorMessage.textContent=passwordValidation.message;errorElement.classList.add('show');submitBtn.classList.remove('btn-loading');return;}setTimeout(function(){try{window.AuthManager.register(firstName,lastName,email,password);console.log('[DEBUG]auth-manager.js:Modal registration successful');successElement.classList.add('show');errorElement.classList.remove('show');modalRegisterForm.reset();setTimeout(function(){switchForm(loginContainer,registerContainer,forgotContainer);successElement.classList.remove('show');},1500);}catch(error){console.error('[ERROR]auth-manager.js:Modal registration error:',error);errorMessage.textContent=error.message;errorElement.classList.add('show');}submitBtn.classList.remove('btn-loading');},500);});}const modalResetForm=document.getElementById('modal-reset-form');if(modalResetForm){modalResetForm.addEventListener('submit',function(e){e.preventDefault();const email=document.getElementById('reset-email').value;const errorElement=document.getElementById('reset-error');const errorMessage=document.getElementById('reset-error-message');const successElement=document.getElementById('reset-success');const submitBtn=modalResetForm.querySelector('button[type="submit"]');submitBtn.classList.add('btn-loading');setTimeout(function(){const users=window.AuthManager.getUsers();const user=users.find(user=>user.email===email);if(!user){errorMessage.textContent="Email not found. Please check your email or create a new account.";errorElement.classList.add('show');successElement.classList.remove('show');submitBtn.classList.remove('btn-loading');return;}successElement.classList.add('show');errorElement.classList.remove('show');modalResetForm.reset();setTimeout(function(){switchForm(loginContainer,registerContainer,forgotContainer);successElement.classList.remove('show');},2000);submitBtn.classList.remove('btn-loading');},500);});}},showAuthModal:function(formToShow='login'){console.log('[DEBUG]auth-manager.js:Showing auth modal with form:',formToShow);let authModal=document.getElementById('auth-modal');if(!authModal){console.log('[DEBUG]auth-manager.js:Modal not found,injecting it');this.injectAuthModal();authModal=document.getElementById('auth-modal');if(!authModal){console.error('[ERROR]auth-manager.js:Failed to create auth modal');return;}this.setupAuthModal();}const loginContainer=document.getElementById('login-form-container');const registerContainer=document.getElementById('register-form-container');const forgotContainer=document.getElementById('forgot-password-container');if(!loginContainer||!registerContainer||!forgotContainer){console.error('[ERROR]auth-manager.js:Modal form containers not found');return;}if(formToShow==='register'){loginContainer.style.display='none';registerContainer.style.display='block';forgotContainer.style.display='none';}else if(formToShow==='forgot'){loginContainer.style.display='none';registerContainer.style.display='none';forgotContainer.style.display='block';}else{loginContainer.style.display='block';registerContainer.style.display='none';forgotContainer.style.display='none';}authModal.style.display='flex';authModal.style.alignItems='center';authModal.style.justifyContent='center';authModal.style.position='fixed';authModal.style.top='0';authModal.style.left='0';authModal.style.width='100%';authModal.style.height='100%';authModal.style.backgroundColor='rgba(0,0,0,0.5)';authModal.style.opacity='1';authModal.style.visibility='visible';authModal.style.zIndex='99999';const modalContent=authModal.querySelector('.modal-content');if(modalContent){modalContent.style.display='block';modalContent.style.opacity='1';modalContent.style.transform='scale(1)';}authModal.classList.add('active');document.body.style.overflow='hidden';console.log('[DEBUG]auth-manager.js:Auth modal should now be visible');},closeAuthModal:function(){const authModal=document.getElementById('auth-modal');if(!authModal)return;authModal.classList.remove('active');document.body.style.overflow='';authModal.style.display='';authModal.style.opacity='';authModal.style.visibility='';authModal.style.zIndex='';authModal.style.position='';authModal.style.alignItems='';authModal.style.justifyContent='';authModal.style.width='';authModal.style.height='';authModal.style.backgroundColor='';authModal.style.top='';authModal.style.left='';console.log('[DEBUG]auth-manager.js:Auth modal closed');}};if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',function(){if(window.AuthManager){window.AuthManager.init();}});}else{if(window.AuthManager){window.AuthManager.init();}}console.log('[DEBUG]auth-manager.js:AuthManager object defined');